{"version":3,"sources":["backbone-metal.js"],"names":[],"mappings":"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","file":"backbone-metal.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('backbone'), require('underscore')) :\n  typeof define === 'function' && define.amd ? define(['backbone', 'underscore'], factory) :\n  global.Metal = factory(global.Backbone, global._)\n}(this, function (Backbone, _) { 'use strict';\n\n  const mixin__Mixin = function Mixin(protoProps) {\n    // Add prototype properties (instance properties) to the class, if supplied.\n    _.extend(this, protoProps);\n  };\n\n  /**\n   * Checks if `value` is a Metal Mixin.\n   *\n   * ```js\n   * Mixin.isMixin(new Mixin());\n   * // >> true\n   * Mixin.isMixin({});\n   * // >> false\n   * Mixin.isMixin(function() {...});\n   * // >> false\n   * Mixin.isMixin(new Class());\n   * // >> false\n   * ```\n   *\n   * @public\n   * @method isMixin\n   * @memberOf _\n   * @param {*} value - The value to check.\n   */\n  mixin__Mixin.isMixin = function isMixin(value) {\n    return !!value && value instanceof mixin__Mixin;\n  };\n\n  var mixin = mixin__Mixin;\n\n  const Events = new mixin(Backbone.Events);\n\n  var events = Events;\n\n  function _wrap(method, superMethod) {\n    return function() {\n      let prevSuper = this._super;\n      this._super = superMethod;\n      let ret = method.apply(this, arguments);\n      this._super = prevSuper;\n      return ret;\n    };\n  }\n\n  /**\n   * A reference to safe regex for checking if a function calls `_super`.\n   *\n   * @private\n   * @const {RegExp}\n   */\n  const CONTAINS_SUPER = (/xyz/.test(function() { xyz; })) ? /\\b_super\\b/ : /.*/; // eslint-disable-line\n\n  /**\n   * Assigns properties of source object to destination object, wrapping methods\n   * that call their super method.\n   *\n   * @private\n   * @method wrapAll\n   * @param {Object} dest - The destination object.\n   * @param {Object} source - The source object.\n   */\n  function _wrapAll(dest, source) {\n    let keys = _.keys(source),\n        length = keys.length,\n        i, name, method, superMethod, hasSuper;\n\n    for (i = 0; i < length; i++) {\n      name = keys[i];\n      method = source[name];\n      superMethod = dest[name];\n\n      // Test if new method calls `_super`\n      hasSuper = CONTAINS_SUPER.test(method);\n\n      // Only wrap the new method if the original method was a function and the\n      // new method calls `_super`.\n      if (hasSuper && _.isFunction(method) && _.isFunction(superMethod)) {\n        dest[name] = _wrap(method, superMethod);\n\n      // Otherwise just add the new method or property to the object.\n      } else {\n        dest[name] = method;\n      }\n    }\n  }\n\n  /**\n   * Creates a new Class.\n   *\n   * ```js\n   * const MyClass = Class.extend({\n   *   initialize() {\n   *     console.log('Created!');\n   *   }\n   * });\n   *\n   * new MyClass();\n   * // >> Created!\n   * ```\n   *\n   * @public\n   * @class Class\n   * @memberOf Metal\n   * @memberOf Backbone\n   */\n  const _class__Class = function Class() {\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.initialize(...arguments);\n  };\n\n  _.extend(_class__Class.prototype, {\n\n    /**\n     * Identifier prefix of the cid. It can be override.\n     *\n     * @public\n     * @attributeOf Class {String}\n     */\n    cidPrefix: 'metal',\n\n    /**\n     * An overridable method called when objects are instantiated. Does not do\n     * anything by default.\n     *\n     * @public\n     * @abstract\n     * @method initialize\n     */\n    initialize: function() {},\n\n    /**\n     * Destroy a Class by removing all listeners.\n     *\n     * @public\n     * @method destroy\n     */\n    destroy() {\n      this.stopListening();\n    }\n  });\n\n  _.extend(_class__Class, {\n\n    /**\n     * Creates a new subclass.\n     *\n     * ```js\n     * const MyClass = Class.extend({\n     *   // ...\n     * });\n     *\n     * const myClass = new MyClass();\n     * myClass instanceof MyClass\n     * // true\n     * myClass instanceof Class\n     * // true\n     * ```\n     *\n     * @public\n     * @static\n     * @method extend\n     * @param {Object} [protoProps] - The properties to be added to the prototype.\n     * @param {Object} [staticProps] - The properties to be added to the constructor.\n     */\n    extend(protoProps, staticProps) {\n      let Parent = this;\n      let Child;\n\n      // The constructor function for the new subclass is either defined by you\n      // (the \"constructor\" property in your `extend` definition), or defaulted\n      // by us to simply call the parent's constructor.\n      if (!protoProps || !_.has(protoProps, 'constructor')) {\n        Child = function() { Parent.apply(this, arguments); };\n      } else if (CONTAINS_SUPER.test(protoProps.constructor)) {\n        Child = _wrap(protoProps.constructor, Parent.prototype.constructor);\n      } else {\n        Child = protoProps.constructor;\n      }\n\n      // Add static properties to the constructor function, if supplied.\n      _.extend(Child, Parent);\n      if (staticProps) {\n        _wrapAll(Child, staticProps);\n      }\n\n      // Set the prototype chain to inherit from `parent`, without calling\n      // `parent`'s constructor function.\n      let Surrogate = function() {\n        this.constructor = Child;\n      };\n\n      Surrogate.prototype = Parent.prototype;\n      Child.prototype = new Surrogate();\n\n      // Add prototype properties (instance properties) to the subclass,\n      // if supplied.\n      if (protoProps) {\n        _wrapAll(Child.prototype, protoProps);\n      }\n\n      // Set a convenience property in case the parent class is needed later.\n      Child.superclass = Parent;\n\n      // Set a convenience property in case the parent's prototype is needed\n      // later.\n      Child.__super__ = Parent.prototype;\n\n      return Child;\n    },\n\n    /**\n     * Mixes properties onto the class's prototype.\n     *\n     * ```js\n     * const MyMixin = new Mixin({\n     *   alert() {\n     *     console.log('Alert!');\n     *   }\n     * });\n     *\n     * const MyClass = Class.extend({\n     *   initialize() {\n     *     this.alert();\n     *   }\n     * });\n     *\n     * MyClass.mixin(MyMixin);\n     *\n     * new MyClass();\n     * // >> Alert!\n     * ```\n     *\n     * @public\n     * @static\n     * @method mixin\n     * @param {Object} protoProps - The properties to be added to the prototype.\n     * @return {Class} - The class.\n     */\n    mixin(protoProps) {\n      // Add prototype properties (instance properties) to the class, if supplied.\n      _wrapAll(this.prototype, protoProps);\n      return this;\n    },\n\n    /**\n     * Mixes properties onto the class's constructor.\n     *\n     * ```js\n     * const MyMixin = new Mixin({\n     *   alert() {\n     *     console.log('Alert!');\n     *   }\n     * });\n     *\n     * const MyClass = Class.extend(...);\n     *\n     * MyClass.include(MyMixin);\n     *\n     * MyClass.alert();\n     * // >> Alert!\n     * ```\n     *\n     * You can also simply pass a plain javascript object.\n     *\n     * ```js\n     * const MyClass = Class.extend(...);\n     *\n     * MyClass.include({\n     *   alert() {\n     *     console.log('Alert!');\n     *   }\n     * });\n     *\n     * MyClass.alert();\n     * // >> Alert!\n     * ```\n     *\n     * @public\n     * @static\n     * @method mixin\n     * @param {Object} staticProps - The properties to be added to the constructor.\n     * @return {Class} - The class.\n     */\n    include(staticProps) {\n      // Add static properties to the constructor function, if supplied.\n      _wrapAll(this, staticProps);\n      return this;\n    },\n\n    /**\n     * Checks if `value` is a Metal Class.\n     *\n     * ```js\n     * Class.isClass(Class.extend(...));\n     * // >> true\n     * Class.isClass(new Class());\n     * // >> true\n     * Class.isClass(function() {...});\n     * // >> false\n     * Class.isClass({...});\n     * // >> false\n     * ```\n     * @public\n     * @method isClass\n     * @memberOf _\n     * @param {*} value - The value to check.\n     */\n    isClass(value) {\n      return !!value && (\n        value instanceof _class__Class ||\n        value.prototype instanceof _class__Class ||\n        value === _class__Class\n      );\n    }\n  });\n\n  /**\n   * @class Class\n   * @mixes Events\n   */\n  _class__Class.mixin(events);\n\n  var _class = _class__Class;\n\n  const ERROR_PROPS = [\n    'description', 'fileName', 'lineNumber', 'name', 'message', 'number'\n  ];\n\n  /**\n   * A subclass of the JavaScript Error.\n   *\n   * ```js\n   * throw new Metal.Error('Oh you\\'ve really done it now...');\n   * // Uncaught Metal.Error: Oh you've really done it now...\n   * //   [stack trace]\n   * ```\n   *\n   * @class Error\n   * @memberOf Metal\n   * @extends Error\n   * @uses Metal.Class\n   */\n  const Err = _class.extend.call(Error, {\n\n    /**\n     * @public\n     * @constructs Error\n     * @param {String} [message] - A description of the error.\n     * @param {Object} [options] - Settings for the error.\n     * @param {String} [options.message] - A description of the error.\n     */\n    constructor(message, options = {}) {\n      // If options are provided in place of a message, assume message exists on\n      // options.\n      if (_.isObject(message)) {\n        options = message;\n        message = options.message;\n      }\n\n      // Create a fake error with message in order to capture a stack trace.\n      let error = Error.call(this, message);\n\n      // Copy over all the error-related properties.\n      _.extend(this, _.pick(error, ERROR_PROPS), _.pick(options, ERROR_PROPS));\n\n      // Adds a `stack` property to the given error object that will yield the\n      // stack trace at the time captureStackTrace was called.\n      // When collecting the stack trace all frames above the topmost call\n      // to this function, including that call, will be left out of the\n      // stack trace.\n      // This is useful because we can hide Metal implementation details\n      // that are not very helpful for the user.\n      Err.captureStackTrace(this, Err);\n    },\n\n    /**\n     * Formats the error message to display in the console.\n     *\n     * @public\n     * @method toString\n     * @returns {String} - Formatted error message.\n     */\n    toString() {\n      return `${this.name}: ${this.message}`;\n    }\n  }, {\n\n    /**\n     * A safe reference to V8's `Error.captureStackTrace`.\n     *\n     * @public\n     * @method captureStackTrace\n     */\n    captureStackTrace(target, method) {\n      if (Error.captureStackTrace) {\n        Error.captureStackTrace(target, method);\n      }\n    }\n  });\n\n  /**\n   * @class Error\n   * @mixes Class\n   */\n  _.extend(Err, _class);\n\n  var _error = Err;\n\n  const _deprecate__deprecate = function deprecate(message, test) {\n\n    // Returns if test is provided and is falsy.\n    if (test !== undefined && test) {\n      return;\n    }\n\n    // If message is provided as an object, format the object into a string.\n    if (_.isObject(message)) {\n      message = _deprecate__deprecate._format(message.prev, message.next);\n    }\n\n    // Ensure that message is a string\n    message = message && message.toString();\n\n    // If deprecation message has not already been warned, send the warning.\n    if (!_deprecate__deprecate._cache[message]) {\n      _deprecate__deprecate._warn(`Deprecation warning: ${message}`);\n      _deprecate__deprecate._cache[message] = true;\n    }\n  };\n\n  /**\n   * Format a message for deprecate.\n   *\n   * @private\n   * @method _format\n   * @memberOf deprecate\n   * @param {String} prev - The deprecated item.\n   * @param {String} next - The replacement for the deprecated item.\n   * @return {String} - The formatted message.\n   */\n  _deprecate__deprecate._format = function _format(prev, next) {\n    return `${prev} is going to be removed in the future. Please use ${next} instead.`;\n  };\n\n  /**\n   * A safe reference to the console object that will fallback to an empty\n   * object.\n   *\n   * @private\n   * @property _console\n   */\n  const _console = typeof console !== 'undefined' ? console : {};\n\n  /**\n   * A safe reference to the console.warn method that will fallback a noop.\n   *\n   * @private\n   * @property _warnMethod\n   */\n  const _warnMethod = _console.warn || _console.log || function() {};\n\n  /**\n   * A safe reference to `console.warn`.\n   *\n   * @private\n   * @method _warn\n   * @memberOf deprecate\n   * @param {*...} - The values to warn in the console.\n   */\n  _deprecate__deprecate._warn = function _warn() {\n    return _warnMethod.apply(_console, arguments);\n  };\n\n  /**\n   * An internal cache to avoid sending the same deprecation warning multiple\n   * times.\n   *\n   * @private\n   * @property _cache\n   * @memberOf deprecate\n   */\n  _deprecate__deprecate._cache = {};\n\n  var _deprecate = _deprecate__deprecate;\n\n  var backbone_metal = Backbone.Metal = {\n    Class,\n    Mixin,\n    Error: _error,\n    deprecate,\n    Events\n  };\n\n  return backbone_metal;\n\n}));\n"],"sourceRoot":"/source/"}